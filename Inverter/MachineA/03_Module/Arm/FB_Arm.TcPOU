<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="FB_Arm" Id="{fa09fdde-421e-4e4d-aa8e-c1ef0121c5a9}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_Arm
VAR
	fbInverter				: FB_Inverter;
	fbFrontSensor			: FB_Sensor;
	fbHomeSensor			: FB_Sensor;
	fbRearSensor			: FB_Sensor;
	
	(*Arm State*)
	bBusy					: BOOL;
	bHoming					: BOOL;
		iHomingState		: INT;
	bJogging				: BOOL;
	bPositioning			: BOOL;
		iPositioningState	: INT;
	bInverseDirection		: BOOL;
	
	(*Parameter*)
	rHighSpeedHz			: REAL;
	rLowSpeedHz				: REAL;
	rHzToRawRatio			: REAL;
	rAnalog					: REAL;
	tDelayTime				: TIME;
	
	rAxisSV					: REAL;
	rAxisPV					: REAL	:= fbInverter.Axis;
	(*Others*)
	fbTon					: TON;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Methods" Id="{90984db3-8fca-4e8d-a74b-ba669e5a0e15}">
      <Folder Name="Private" Id="{cc660ee9-9210-48e9-81f8-4c763841ef9b}" />
    </Folder>
    <Folder Name="Properties" Id="{eab42068-3e20-4616-973f-4bb1dacbffc5}" />
    <Property Name="Axis" Id="{ecbc6915-ad31-41c9-a66f-399ab579a352}" FolderPath="Properties\">
      <Declaration><![CDATA[PROPERTY Axis : REAL]]></Declaration>
      <Get Name="Get" Id="{777e36e1-29fe-4a23-8d61-57902032fcd6}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Axis := rAxisPV;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="DelayTime" Id="{65534ff0-e573-4088-b8c8-3bb4c9fcfef0}" FolderPath="Properties\">
      <Declaration><![CDATA[PROPERTY DelayTime : TIME]]></Declaration>
      <Set Name="Set" Id="{d1ec60f5-f1c0-41de-ac22-4ae6939a8cc2}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[tDelayTime := DelayTime;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Property Name="HighSpeedHz" Id="{76e6d411-69cc-4e13-9c8c-2f07edbc1f2c}" FolderPath="Properties\">
      <Declaration><![CDATA[PROPERTY HighSpeedHz : REAL]]></Declaration>
      <Set Name="Set" Id="{2d753281-ce35-4145-9d35-b90edce28f3e}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[rHighSpeedHz := HighSpeedHz;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Method Name="Homing" Id="{ee1750a1-5645-423e-accb-f0bf74ca5075}" FolderPath="Methods\">
      <Declaration><![CDATA[METHOD Homing : BOOL
VAR_INPUT
	StartButton				: BOOL;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[CASE iHomingState OF
	E_ArmState.Idle:
		IF StartButton AND NOT bHoming AND NOT bBusy AND NOT fbHomeSensor.Detect THEN
			bBusy := TRUE;
			bHoming := TRUE;
			
			iHomingState := E_ArmState.FirstState;
			
		ELSIF StartButton AND fbHomeSensor.Detect THEN
			iHomingState := E_ArmState.Done;
		END_IF
	
	E_ArmState.FirstState:
			fbInverter.Analog := (rHzToRawRatio*rHighSpeedHz);
		MoveLeft();
		
		IF fbHomeSensor.Detect THEN
			MoveStop();
			
			fbTon(IN:= TRUE, PT:= tDelayTime);
			IF fbTon.Q THEN
				fbTon(IN:= FALSE);
				iHomingState := E_ArmState.Redo;
			END_IF
			
		ELSIF fbFrontSensor.Detect THEN
			MoveStop();
			
			fbTon(IN:= TRUE, PT:= tDelayTime);
			IF fbTon.Q THEN
				fbTon(IN:= FALSE);
				iHomingState := E_ArmState.Reverse;
			END_IF
			
		ELSIF fbRearSensor.Detect THEN
			MoveStop();
			
			fbTon(IN:= TRUE, PT:= tDelayTime);
			IF fbTon.Q THEN
				fbTon(IN:= FALSE);
				bInverseDirection := NOT bInverseDirection;
				iHomingState := E_ArmState.Inverse;
			END_IF
		END_IF
	
	E_ArmState.Reverse:
		MoveRight();
		
		IF fbHomeSensor.Detect THEN
			MoveStop();
			fbTon(IN:= TRUE, PT:= tDelayTime);
			IF fbTon.Q THEN
				fbTon(IN:= FALSE);
				iHomingState := E_ArmState.Redo;
			END_IF
		END_IF
	
	E_ArmState.Inverse:
		MoveLeft();
		
		IF fbHomeSensor.Detect THEN
			MoveStop();
			fbTon(IN:= TRUE, PT:= tDelayTime);
			IF fbTon.Q THEN
				fbTon(IN:= FALSE);
				iHomingState := E_ArmState.Redo;
			END_IF
		END_IF
	
	E_ArmState.Redo:
		fbInverter.Analog := (rHzToRawRatio*rLowSpeedHz);
		MoveLeft();
		
		IF NOT fbHomeSensor.Detect THEN
			MoveStop();
			fbTon(IN:= TRUE, PT:= tDelayTime);
			IF fbTon.Q THEN
				fbTon(IN:= FALSE);
				iHomingState := E_ArmState.SecondState;
			END_IF
		END_IF
	
	E_ArmState.SecondState:
		fbInverter.Analog := (rHzToRawRatio*rLowSpeedHz);
		MoveRight();
		IF fbHomeSensor.Detect THEN
			MoveStop();
			
			fbTon(IN:= TRUE, PT:= tDelayTime);
			IF fbTon.Q THEN
				fbTon(IN:= FALSE);
				iHomingState := E_ArmState.Done;
			END_IF
		END_IF
	
	E_ArmState.Done:
		bBusy := FALSE;
		bHoming := FALSE;
		iHomingState := E_ArmState.Idle;
		Homing := True;
END_CASE]]></ST>
      </Implementation>
    </Method>
    <Property Name="HzToRawRatio" Id="{5fcb0c32-f4a1-4b6f-b712-f9a3e64d0464}" FolderPath="Properties\">
      <Declaration><![CDATA[PROPERTY HzToRawRatio : REAL]]></Declaration>
      <Set Name="Set" Id="{130a199e-d87e-49c2-a088-74e75792c763}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[rHzToRawRatio := HzToRawRatio;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Method Name="Jogging" Id="{cabc3749-1d71-4d0c-977a-cb8d235cb81a}" FolderPath="Methods\">
      <Declaration><![CDATA[METHOD Jogging : BOOL
VAR_INPUT
	StartButton				: BOOL;
	MoveLeftButton			: BOOL;
	MoveRightButton			: BOOL;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Property Name="LowSpeedHz" Id="{725f885a-59ca-404c-885d-76b160c47f3a}" FolderPath="Properties\">
      <Declaration><![CDATA[PROPERTY LowSpeedHz : REAL]]></Declaration>
      <Set Name="Set" Id="{22a34560-5dd3-433a-a623-facfe6f59786}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[rLowSpeedHz := LowSpeedHz;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Method Name="MoveLeft" Id="{fe265b98-10b8-4515-b965-65c92a1caac5}" FolderPath="Methods\Private\">
      <Declaration><![CDATA[METHOD PRIVATE MoveLeft : PVOID
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT bInverseDirection THEN
	fbInverter.Clockwise := TRUE;
	fbInverter.CounterClockwise := FALSE;
ELSE
	fbInverter.Clockwise := FALSE;
	fbInverter.CounterClockwise := TRUE;
END_IF
]]></ST>
      </Implementation>
    </Method>
    <Method Name="MoveRight" Id="{44308cbb-1430-4ef2-a87f-8038ca6f2e39}" FolderPath="Methods\Private\">
      <Declaration><![CDATA[METHOD PRIVATE MoveRight : PVOID
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT bInverseDirection THEN
	fbInverter.Clockwise := FALSE;
	fbInverter.CounterClockwise := TRUE;
ELSE
	fbInverter.Clockwise := TRUE;
	fbInverter.CounterClockwise := FALSE;
END_IF
]]></ST>
      </Implementation>
    </Method>
    <Method Name="MoveStop" Id="{538ec886-04c2-4588-8ae9-72d461efae5f}" FolderPath="Methods\Private\">
      <Declaration><![CDATA[METHOD PRIVATE MoveStop : PVOID
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[fbInverter.Clockwise := FALSE;
fbInverter.CounterClockwise := FALSE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Positioning" Id="{bcdd161b-7b3c-4957-924d-d96ec2794d7a}" FolderPath="Methods\">
      <Declaration><![CDATA[METHOD Positioning : BOOL
VAR_INPUT
	StartButton				: BOOL;
	TargetAxis				: REAL;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[CASE iPositioningState OF
	E_ArmState.Idle:
		IF StartButton AND NOT bPositioning AND NOT bBusy THEN
			bBusy := TRUE;
			bHoming := TRUE;
			
			iPositioningState := E_ArmState.FirstState;
		END_IF
	
	E_ArmState.FirstState:
		IF fbFrontSensor.Detect OR fbFrontSensor.Detect THEN
			MoveStop();
			
			fbTon(IN:= TRUE, PT:= tDelayTime);
			IF fbTon.Q THEN
				fbTon(IN:= FALSE);
				iPositioningState := E_ArmState.Inverse;
			END_IF
		ELSE
			IF REAL_TO_INT(fbInverter.Axis) < REAL_TO_INT(TargetAxis) THEN
				IF (TargetAxis - fbInverter.Axis) > 10 THEN
					fbInverter.Analog := (rHzToRawRatio*rHighSpeedHz);
				ELSE
					fbInverter.Analog := (rHzToRawRatio*rHighSpeedHz);
				END_IF
				MoveLeft();
				
			ELSIF REAL_TO_INT(fbInverter.Axis) > REAL_TO_INT(TargetAxis) THEN
				IF (fbInverter.Axis - TargetAxis) > 10 THEN
					fbInverter.Analog := (rHzToRawRatio*rHighSpeedHz);
				ELSE
					fbInverter.Analog := (rHzToRawRatio*rHighSpeedHz);
				END_IF
				MoveRight();
			
			ELSE
				MoveStop();
				
				fbTon(IN:= TRUE, PT:= tDelayTime);
				IF fbTon.Q THEN
					fbTon(IN:= FALSE);
					iPositioningState := E_ArmState.Done;
				END_IF
			END_IF
		END_IF
		
	E_ArmState.Inverse:
		MoveLeft();
		
		IF fbHomeSensor.Detect THEN
			MoveStop();
			fbTon(IN:= TRUE, PT:= tDelayTime);
			IF fbTon.Q THEN
				fbTon(IN:= FALSE);
				iPositioningState := E_ArmState.FirstState;
			END_IF
		END_IF
	
	E_ArmState.Done:
		bBusy := FALSE;
		bPositioning := FALSE;
		iPositioningState := E_ArmState.Idle;
		Positioning := TRUE;
END_CASE

]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="FB_Arm">
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="FB_Arm.Axis.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_Arm.DelayTime.Set">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_Arm.HighSpeedHz.Set">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_Arm.Homing">
      <LineId Id="5" Count="0" />
      <LineId Id="11" Count="0" />
      <LineId Id="25" Count="8" />
      <LineId Id="24" Count="0" />
      <LineId Id="9" Count="0" />
      <LineId Id="45" Count="30" />
      <LineId Id="13" Count="1" />
      <LineId Id="76" Count="9" />
      <LineId Id="15" Count="1" />
      <LineId Id="86" Count="9" />
      <LineId Id="17" Count="1" />
      <LineId Id="96" Count="10" />
      <LineId Id="19" Count="1" />
      <LineId Id="107" Count="10" />
      <LineId Id="21" Count="1" />
      <LineId Id="118" Count="1" />
      <LineId Id="23" Count="0" />
      <LineId Id="120" Count="0" />
      <LineId Id="10" Count="0" />
    </LineIds>
    <LineIds Name="FB_Arm.HzToRawRatio.Set">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_Arm.Jogging">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_Arm.LowSpeedHz.Set">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_Arm.MoveLeft">
      <LineId Id="13" Count="1" />
      <LineId Id="16" Count="1" />
      <LineId Id="20" Count="0" />
      <LineId Id="19" Count="0" />
      <LineId Id="15" Count="0" />
      <LineId Id="12" Count="0" />
    </LineIds>
    <LineIds Name="FB_Arm.MoveRight">
      <LineId Id="9" Count="3" />
      <LineId Id="15" Count="0" />
      <LineId Id="13" Count="1" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_Arm.MoveStop">
      <LineId Id="6" Count="0" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_Arm.Positioning">
      <LineId Id="28" Count="0" />
      <LineId Id="32" Count="1" />
      <LineId Id="41" Count="0" />
      <LineId Id="43" Count="2" />
      <LineId Id="42" Count="0" />
      <LineId Id="90" Count="0" />
      <LineId Id="34" Count="1" />
      <LineId Id="46" Count="0" />
      <LineId Id="48" Count="0" />
      <LineId Id="50" Count="3" />
      <LineId Id="49" Count="0" />
      <LineId Id="58" Count="0" />
      <LineId Id="65" Count="6" />
      <LineId Id="83" Count="0" />
      <LineId Id="74" Count="8" />
      <LineId Id="84" Count="0" />
      <LineId Id="86" Count="0" />
      <LineId Id="92" Count="0" />
      <LineId Id="87" Count="2" />
      <LineId Id="85" Count="0" />
      <LineId Id="91" Count="0" />
      <LineId Id="47" Count="0" />
      <LineId Id="93" Count="0" />
      <LineId Id="36" Count="0" />
      <LineId Id="95" Count="8" />
      <LineId Id="39" Count="0" />
      <LineId Id="94" Count="0" />
      <LineId Id="40" Count="0" />
      <LineId Id="104" Count="1" />
      <LineId Id="30" Count="0" />
      <LineId Id="106" Count="0" />
      <LineId Id="31" Count="0" />
      <LineId Id="29" Count="0" />
      <LineId Id="22" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>